--
-- first, define the datatype.  Turn off echoing so that expected file
-- does not depend on contents of rdkit.sql.
--
SET client_min_messages = warning;
\set ECHO none
RESET client_min_messages;
SELECT is_valid_smiles('c1ccccc1');
 is_valid_smiles 
-----------------
 t
(1 row)

SELECT is_valid_smiles('c1ccccc');
 is_valid_smiles 
-----------------
 f
(1 row)

SELECT is_valid_smiles('c1cccn1');
 is_valid_smiles 
-----------------
 f
(1 row)

CREATE TABLE pgmol (id int, m mol);
\copy pgmol from 'data/data'
CREATE UNIQUE INDEX mol_ididx ON pgmol (id);
SELECT count(*) FROM pgmol;
 count 
-------
  1000
(1 row)

SELECT count(*) FROM pgmol WHERE m @> 'c1ccccc1';
 count 
-------
   901
(1 row)

SELECT count(*) FROM pgmol WHERE m @> 'c1cccnc1';
 count 
-------
   245
(1 row)

SELECT count(*) FROM pgmol WHERE 'c1ccccc1' <@ m;
 count 
-------
   901
(1 row)

SELECT count(*) FROM pgmol WHERE 'c1cccnc1' <@ m;
 count 
-------
   245
(1 row)

SELECT id, layered_fp(m) AS f INTO pgbfp FROM pgmol;
CREATE UNIQUE INDEX bfp_ididx ON pgbfp (id);
SELECT id, morgan_fp(m,1) AS f INTO pgsfp FROM pgmol;
CREATE UNIQUE INDEX sfp_ididx ON pgsfp (id);
SELECT id, rdkit_fp(m) AS f INTO pgavfp FROM pgmol;
SELECT id, torsion_fp(m) AS f INTO pgtorsfp FROM pgmol;
SELECT id, atompair_fp(m) AS f INTO pgpairfp FROM pgmol;
set rdkit.tanimoto_threshold=0.5;
set rdkit.dice_threshold=0.5;
SELECT 
	id, 
	tanimoto_sml(layered_fp('C1C(OC2=CC(=CC(=C2C1=O)O)O)'::mol), f) 
FROM
	 (SELECT * FROM pgbfp ORDER BY id) AS t 
WHERE layered_fp('C1C(OC2=CC(=CC(=C2C1=O)O)O)'::mol) % f  
LIMIT 10;
   id   |   tanimoto_sml    
--------+-------------------
   2722 |  0.51394422310757
  11829 | 0.557377049180328
  63248 | 0.606870229007634
  66722 | 0.734939759036145
  68281 |             0.604
  98960 | 0.521311475409836
 198995 | 0.611570247933884
 230488 | 0.657142857142857
 233331 | 0.534883720930233
 246547 | 0.548951048951049
(10 rows)

SELECT 
	id, 
	dice_sml(layered_fp('C1C(OC2=CC(=CC(=C2C1=O)O)O)'::mol), f) 
FROM
	 (SELECT * FROM pgbfp ORDER BY id) AS t 
WHERE layered_fp('C1C(OC2=CC(=CC(=C2C1=O)O)O)'::mol) % f  
LIMIT 10;
   id   |     dice_sml      
--------+-------------------
   2722 | 0.678947368421053
  11829 | 0.715789473684211
  63248 | 0.755344418052256
  66722 | 0.847222222222222
  68281 | 0.753117206982544
  98960 | 0.685344827586207
 198995 | 0.758974358974359
 230488 | 0.793103448275862
 233331 | 0.696969696969697
 246547 | 0.708803611738149
(10 rows)

SELECT 
	id, 
	tanimoto_sml(layered_fp('C1C(OC2=CC(=CC(=C2C1=O)O)O)'::mol), f) 
FROM
	 (SELECT * FROM pgbfp ORDER BY id) AS t 
WHERE layered_fp('C1C(OC2=CC(=CC(=C2C1=O)O)O)'::mol) # f  
LIMIT 10;
  id   |   tanimoto_sml    
-------+-------------------
  2722 |  0.51394422310757
  2788 | 0.475836431226766
 11829 | 0.557377049180328
 42640 | 0.471810089020772
 63248 | 0.606870229007634
 66722 | 0.734939759036145
 68281 |             0.604
 75846 | 0.448132780082988
 82533 | 0.496932515337423
 83773 | 0.477341389728097
(10 rows)

SELECT 
	id, 
	dice_sml(layered_fp('C1C(OC2=CC(=CC(=C2C1=O)O)O)'::mol), f),
	size(f)
FROM
	 (SELECT * FROM pgbfp ORDER BY id) AS t 
WHERE layered_fp('C1C(OC2=CC(=CC(=C2C1=O)O)O)'::mol) # f  
LIMIT 10;
  id   |     dice_sml      | size 
-------+-------------------+------
  2722 | 0.678947368421053 | 1024
  2788 | 0.644836272040302 | 1024
 11829 | 0.715789473684211 | 1024
 42640 | 0.641129032258065 | 1024
 63248 | 0.755344418052256 | 1024
 66722 | 0.847222222222222 | 1024
 68281 | 0.753117206982544 | 1024
 75846 |   0.6189111747851 | 1024
 82533 | 0.663934426229508 | 1024
 83773 | 0.646216768916155 | 1024
(10 rows)

set rdkit.tanimoto_threshold=0.4;
SELECT 
	id, 
	tanimoto_sml(morgan_fp('C1C(OC2=CC(=CC(=C2C1=O)))'::mol, 1), f) 
FROM
	 (SELECT * FROM pgsfp ORDER BY id) AS t 
WHERE morgan_fp('C1C(OC2=CC(=CC(=C2C1=O)))'::mol, 1) % f  
LIMIT 10;
   id    |   tanimoto_sml    
---------+-------------------
 3761688 | 0.441860465116279
(1 row)

SELECT 
	id, 
	dice_sml(morgan_fp('C1C(OC2=CC(=CC(=C2C1=O)))'::mol, 1), f) 
FROM
	 (SELECT * FROM pgsfp ORDER BY id) AS t 
WHERE morgan_fp('C1C(OC2=CC(=CC(=C2C1=O)))'::mol, 1) % f  
LIMIT 10;
   id    |     dice_sml      
---------+-------------------
 3761688 | 0.612903225806452
(1 row)

SELECT 
	id, 
	tanimoto_sml(morgan_fp('C1C(OC2=CC(=CC(=C2C1=O)O)O)'::mol, 1), f) 
FROM
	 (SELECT * FROM pgsfp ORDER BY id) AS t 
WHERE morgan_fp('C1C(OC2=CC(=CC(=C2C1=O)O)O)'::mol, 1) # f  
LIMIT 10;
    id    |   tanimoto_sml    
----------+-------------------
   902176 | 0.347826086956522
  2952787 | 0.365853658536585
  5281628 | 0.346153846153846
 10560368 | 0.435897435897436
 16196768 |             0.375
(5 rows)

SELECT 
	id, 
	dice_sml(morgan_fp('C1C(OC2=CC(=CC(=C2C1=O)O)O)'::mol, 1), f)
FROM
	 (SELECT * FROM pgsfp ORDER BY id) AS t 
WHERE morgan_fp('C1C(OC2=CC(=CC(=C2C1=O)O)O)'::mol, 1) # f  
LIMIT 10;
    id    |     dice_sml      
----------+-------------------
   902176 | 0.516129032258065
  2952787 | 0.535714285714286
  5281628 | 0.514285714285714
 10560368 | 0.607142857142857
 16196768 | 0.545454545454545
(5 rows)

